package javaStudy.example;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.zip.GZIPOutputStream;

public class GZipAllFiles {
	public final static int THREAD_COUNT=4;
	public static void main(String[] args){
		ExecutorService pool = Executors.newFixedThreadPool(THREAD_COUNT);
		String[] filePath = {"C:\\Users\\seong\\Desktop\\extension"};
		for(String filename: filePath){
			File f = new File(filename);
			System.out.println(" fileName : "+ f);
			if(f.exists()){
				if(f.isDirectory()){
					File[] files = f.listFiles();
					System.out.println(" filelistFiles : "+ files);
					for(int i=0; i<files.length; i++){
						if(!files[i].isDirectory()){
							Runnable task = new GZipRunnable(files[i]);
							System.out.println(" task : "+ task);
							pool.submit(task);
						}
					}
				}else{
					Runnable task = new GZipRunnable(f);
					pool.submit(task);
				}
			}
		}
		pool.shutdown();
	}

}

class GZipRunnable implements Runnable {

	private final File input;
	public GZipRunnable(File input){
		this.input = input;
	}
	
	public void run(){
		if(!input.getName().endsWith(".zip")){
			File output = new File(input.getParent(),input.getName()+".zip");
			if(!output.exists()){
				try(
					InputStream in = new BufferedInputStream(new FileInputStream(input));
					OutputStream out = new BufferedOutputStream(new GZIPOutputStream(new FileOutputStream(output)));
				) {
					int b;
					while((b=in.read())!= -1)out.wait(b);
					out.flush();
				}catch(IOException | InterruptedException ex){
					System.out.println(ex);
				}
			}
		}
	}

}

# 책 예제
